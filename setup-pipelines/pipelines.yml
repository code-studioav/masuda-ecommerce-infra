AWSTemplateFormatVersion: 2010-09-09
Description: Build a basic pipeline
Parameters:
  EnvironmentName:
    Type: String
    AllowedValues:
      - dev
      - qa
      - staging
      - prod
    Description: Environment name.
    Default: dev
  AppName:
    Type: String
    ConstraintDescription: '[a-z]+'
    Description: The project name.
  PrincipalTemplate:
    Type: String
    Description: Template name to use in cloudformation deploy.
    Default: 'masterTemplate.yaml'
  PrincipalTemplateZip:
    Type: String
    Description: Template name to use in cloudformation deploy.
    Default: 'masterTemplate.zip'
  VpcCidr:
    Type: String
    Description: Network subnet for routing
    Default: '10.61.0.0/16'
  VpcMaskForPrivate:
    Type: String
    Description: Mask to apply to IPs at private subnets
    Default: '/24'
  VpcMaskForPublic:
    Type: String
    Description: Mask to apply to IPs at public subnets
    Default: '/24'
  VpcNamesForPrivate:
    Type: String
    Description: Comma delimited list for names of private subnets
    Default: 'A,B,C'
  VpcNamesForPublic:
    Type: String
    Description: Comma delimited list for names of public subnets
    Default: 'A'
  VpcEnableS3Gateway:
    Type: String
    Description: Flag to create a vpc endpoint between nat gateway and s3
    AllowedValues:
         - 'true'
         - 'false'
  RdsInstanceClass:
    Type: String
    Description: Name of the instance of Rds. See allowed values at https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.Types.html
    Default: 'db.t3.micro'
  RdsStorageGib:
    Type: Number
    Description: Storage size in Gib.
    Default: 20
  RdsEngine:
    Type: String
    Description: Name of the databases engine. See allowed values at https://docs.aws.amazon.com/cli/latest/reference/rds/describe-db-engine-versions.html
    Default: 'postgres'
  RdsVersion:
    Type: String
    Description: Version of the database engine
    Default: '16.4'
  DbName:
    Type: String
    Description: Name of the database to create.
    Default: 'generic_db'
  DbUserName:
    Type: String
    Description: Username for the database access.
    NoEcho: 'true'
    MinLength: '1'
    MaxLength: '16'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: Must begin with a letter and contain only alphanumeric characters
    Default: 'dbadminUser'
  DbPort:
    Type: String
    Description: Port for the database access.
    Default: '5432'
  EC2CreateBastion:
    Type: String
    Description: Whether to create a bastion host for EC2 instances.
    Default: 'false'
    AllowedValues:
      - 'true'
      - 'false'
  Ec2ImageName:
    Type: String
    Description: Name of the Amazon Machine Image (AMI) to use for EC2 instances.
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-kernel-5.10-hvm-x86_64-gp2'
  Ec2InstanceType:
    Type: String
    Description: Type of the Amazon EC2 instance to use for EC2 instances. Allowed values at https://aws.amazon.com/es/ec2/instance-types/
    Default: 't3.micro'
  Ec2SshPort:
    Type: Number
    Description: SSH port for the EC2 instances.
    Default: 22
Resources:
  PipelineEventRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action: 'sts:AssumeRole'
            Principal:
              Service:
                - events.amazonaws.com
      Path: /
      Policies:
        -
          PolicyName: !Sub '${EnvironmentName}-${AppName}-eb-pipeline-execution'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: codepipeline:StartPipelineExecution
                Resource: !Join [ '', [ 'arn:aws:codepipeline:', !Ref 'AWS::Region', ':', !Ref 'AWS::AccountId', ':', !Ref PipelineInfra ] ]
  PipelineEventRule:
    Type: AWS::Events::Rule
    Properties:
      EventPattern:
        source:
          - aws.s3
        detail-type:
          - 'AWS API Call via CloudTrail'
        detail:
          eventSource:
            - s3.amazonaws.com
          eventName:
            - CopyObject
            - PutObject
            - CompleteMultipartUpload
          requestParameters:
            bucketName:
              - !Ref S3CodePipelineArtifactStore
            key:
              - !Sub '${AppName}/deploys/networking-db/infra/${PrincipalTemplateZip}'
      Targets:
        -
          Arn:
            !Join [ '', [ 'arn:aws:codepipeline:', !Ref 'AWS::Region', ':', !Ref 'AWS::AccountId', ':', !Ref PipelineInfra ] ]
          RoleArn: !GetAtt PipelineEventRole.Arn
          Id: codepipeline-event-fire
  PipelineInfra:
    Type: 'AWS::CodePipeline::Pipeline'
    Properties:
      Name: !Sub '${EnvironmentName}-${AppName}-networking-db-infra-pipeline'
      RoleArn: !GetAtt
        - ROLCodePipeline
        - Arn
      Stages:
        - Name: Source
          Actions:
            - Name: !Sub 'Source${AppName}'
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: S3
              OutputArtifacts:
                - Name: SourceOutput
              Configuration:
                S3Bucket: !Ref S3CodePipelineArtifactStore
                S3ObjectKey: !Sub '${AppName}/deploys/networking-db/infra/${PrincipalTemplateZip}'
                PollForSourceChanges: false
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: CreateChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                ChangeSetName: !Sub '${EnvironmentName}-${AppName}-changeSet'
                StackName: !Sub '${EnvironmentName}-${AppName}-stack'
                Capabilities: 'CAPABILITY_IAM,CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND'
                TemplatePath:
                  'Fn::Sub': 'SourceOutput::${PrincipalTemplate}'
                RoleArn: !GetAtt
                  - ROLCloudFormation
                  - Arn
                ParameterOverrides: !Sub >-
                  {"EnvironmentName":"${EnvironmentName}","AppName":"/config/${EnvironmentName}/infra/project/AppName","RdsInstanceClass":"${RdsInstanceClass}","RdsStorageGib":"${RdsStorageGib}","RdsEngine":"${RdsEngine}","RdsVersion":"${RdsVersion}","DbName":"${DbName}","DbUserName":"${DbUserName}","DbPort":"${DbPort}","EC2CreateBastion":"${EC2CreateBastion}","Ec2ImageName":"${Ec2ImageName}","Ec2InstanceType":"${Ec2InstanceType}","Ec2SshPort":"${Ec2SshPort}","VpcCidr":"${VpcCidr}","VpcMaskForPrivate":"${VpcMaskForPrivate}","VpcMaskForPublic":"${VpcMaskForPublic}","VpcNamesForPrivate":"${VpcNamesForPrivate}","VpcNamesForPublic":"${VpcNamesForPublic}","VpcEnableS3Gateway":"${VpcEnableS3Gateway}"}
              RunOrder: 1
              InputArtifacts:
                - Name: SourceOutput
            - Name: ChangesetExcecute
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: !Sub '${EnvironmentName}-${AppName}-changeSet'
                StackName: !Sub '${EnvironmentName}-${AppName}-stack'
              RunOrder: 2
              InputArtifacts:
                - Name: SourceOutput
      ArtifactStore:
        Type: S3
        Location: !Ref S3CodePipelineArtifactStore
  ROLCodePipeline:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub '${EnvironmentName}-${AppName}-CodePipeline-Service-Role'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: 'sts:AssumeRole'
            Principal:
              Service:
                - codepipeline.amazonaws.com
      Path: /
      Policies:
        - PolicyName: !Sub '${EnvironmentName}-${AppName}-CodePipeline-Policy'
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'iam:PassRole'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'ec2:*'
                  - 'cloudwatch:*'
                  - 'cloudformation:*'
                  - 'rds:*'
                Resource: '*'
              - Effect: Allow
                Action: 's3:*'
                Resource: !GetAtt
                  - S3CodePipelineArtifactStore
                  - Arn
              - Effect: Allow
                Action: 's3:*'
                Resource: !Sub '${S3CodePipelineArtifactStore.Arn}/*'
  S3CodePipelineArtifactStore:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Sub 'artifacts-${EnvironmentName}-${AWS::Region}-${AWS::AccountId}'
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
  CloudTrailBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref CloudTrailBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          -
            Sid: AWSCloudTrailAclCheck
            Effect: Allow
            Principal:
              Service:
                - cloudtrail.amazonaws.com
            Action: s3:GetBucketAcl
            Resource: !GetAtt CloudTrailBucket.Arn
          -
            Sid: AWSCloudTrailWrite
            Effect: Allow
            Principal:
              Service:
                - cloudtrail.amazonaws.com
            Action: s3:PutObject
            Resource: !Join [ '', [ !GetAtt CloudTrailBucket.Arn, '/AWSLogs/', !Ref 'AWS::AccountId', '/*' ] ]
            Condition: 
              StringEquals:
                s3:x-amz-acl: bucket-owner-full-control
  CloudTrailBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
  AwsCloudTrail:
    DependsOn:
      - CloudTrailBucketPolicy
    Type: AWS::CloudTrail::Trail
    Properties:
      S3BucketName: !Ref CloudTrailBucket
      EventSelectors:
        -
          DataResources:
            -
              Type: AWS::S3::Object
              Values:
                - !Join [ '', [ !GetAtt S3CodePipelineArtifactStore.Arn, '/', !Sub '${AppName}/deploys/networking-db/infra/${PrincipalTemplateZip}' ] ]
          ReadWriteType: WriteOnly
          IncludeManagementEvents: false
      IncludeGlobalServiceEvents: true
      IsLogging: true
      IsMultiRegionTrail: true
  S3PoilicyCodePipelineArtifactStore:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref S3CodePipelineArtifactStore
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !GetAtt
                  - ROLCodePipeline
                  - Arn
                - !GetAtt
                  - ROLCloudFormation
                  - Arn
            Action: 's3:*'
            Resource: !Sub 'arn:aws:s3:::${S3CodePipelineArtifactStore}/*'
  ROLCloudFormation:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub '${EnvironmentName}-${AppName}-CloudFormation-Role'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: 'sts:AssumeRole'
            Principal:
              Service:
                - cloudformation.amazonaws.com
      Path: /
      Policies:
        - PolicyName: !Sub '${EnvironmentName}-${AppName}-CloudFormation-Policy'
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - cloudformation:CreateStack
                  - cloudformation:CreateChangeSet
                  - cloudformation:DeleteStack
                  - cloudformation:DeleteChangeSet
                  - cloudformation:UpdateStack
                Resource: '*'
              - Effect: Allow
                Resource: 'arn:aws:s3:::*'
                Action:
                  - s3:GetBucketPolicy
                  - s3:PutBucketPolicy
              - Effect: Allow
                Action:
                  - 'elasticfilesystem:*'
                  - 'autoscaling:*'
                  - 'waf:*'
                  - 'rds:*'
                  - 'kms:*'
                  - 'acm:*'
                  - 'route53:*'
                  - 'cloudfront:*'
                  - 'wafv2:*'
                  - 'appsync:*'
                  - 'waf-regional:*'
                  - 'dynamodb:*'
                  - 'elasticloadbalancing:*'
                  - 'states:*'
                  - 'organizations:ListPoliciesForTarget'
                  - 'organizations:ListRoots'
                  - 'organizations:ListTargetsForPolicy'
                  - 'apigateway:*'
                  - 'organizations:DescribeAccount'
                  - 's3:*'
                  - 'secretsmanager:*'
                  - 'organizations:DescribePolicy'
                  - 'organizations:ListChildren'
                  - 'organizations:ListPolicies'
                  - 'iam:*'
                  - 'ssm:*'
                  - 'organizations:DescribeOrganization'
                  - 'codedeploy:*'
                  - 'lambda:*'
                  - 'organizations:DescribeOrganizationalUnit'
                  - 'organizations:ListParents'
                  - 'logs:*'
                  - 'ec2:*'
                  - 'amplify:*'
                  - 'ecr:*'
                  - 'ecs:*'
                Resource: '*'
  SSMBucketArtifacts:
    Type: 'AWS::SSM::Parameter'
    Properties:
      Name: !Sub '/config/${EnvironmentName}/${AppName}/infra/bucket/artifacts'
      Tier: Standard
      Type: String
      Value: !Ref S3CodePipelineArtifactStore
  SSMBucketCloudtrailLogs:
    Type: 'AWS::SSM::Parameter'
    Properties:
      Name: !Sub '/config/${EnvironmentName}/infra/bucket/cloudtrail'
      Tier: Standard
      Type: String
      Value: !Ref CloudTrailBucket
  SSMAppNameName:
    Type: 'AWS::SSM::Parameter'
    Properties:
      Name: !Sub '/config/${EnvironmentName}/infra/project/AppName'
      Tier: Standard
      Type: String
      Value: !Ref AppName
  S3BucketLogs:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Sub 'logs-${EnvironmentName}-${AWS::Region}-${AWS::AccountId}'
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
  S3BucketLogsPolicy:
    Type: "AWS::S3::BucketPolicy"
    Properties:
      Bucket: !Ref S3BucketLogs
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !Sub
                  - "arn:aws:iam::${ACCOUNT}:root"
                  - ACCOUNT: !Ref "AWS::AccountId"
            Action: "s3:*"
            Resource: !Sub "arn:aws:s3:::${S3BucketLogs}/*"
          - Effect: Deny
            Principal:
              AWS: "*"
            Action: "*"
            Resource: !Sub "arn:aws:s3:::${S3BucketLogs}/*"
            Condition:
              Bool:
                "aws:SecureTransport": false
  SSMBucketLogs:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: !Sub "/config/${EnvironmentName}/infra/bucket/logs"
      Tier: Standard
      Type: String
      Value: !Ref S3BucketLogs